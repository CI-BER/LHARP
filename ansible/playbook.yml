---
- hosts: irp2
  become: yes

  roles:
    - ansible-java8-oracle

  tasks:
    - name: Install packages
      apt: pkg={{ item }} state=latest
      with_items:
        - python3
        - python3-dev
        - python-dev
        - python-virtualenv
        - python-pip
        - libz-dev
        - git
        - nginx

    - name: Install Python3 LXML dependencies
      apt: pkg=python3-lxml state=build-dep

    - name: Configure Nginx Proxy
      template: src=nginx-irp2.conf.j2 dest=/etc/nginx/conf.d/irp2.conf
    - service: name=nginx state=restarted enabled=yes

    - name: Create Solr user
      user: name=solr system=yes

    - stat: path=/opt/solr
      register: s

    - name: Download Solr
      get_url: url=http://mirrors.ibiblio.org/apache/lucene/solr/6.1.0/solr-6.1.0.tgz dest=/tmp/solr-6.1.0.tgz
      when: s.stat.isdir is defined and s.stat.isdir

    - name: Extract Solr installer
      command: tar xzf /tmp/solr-6.1.0.tgz solr-6.1.0/bin/install_solr_service.sh --strip-components=2
      args:
        chdir: /tmp/
        creates: /opt/solr

    - name: Run Solr installer (starts Solr service)
      command: bash ./install_solr_service.sh solr-6.1.0.tgz -i /opt -d /var/solr -u solr -s solr -p 8983
      args:
        chdir: /tmp/
        creates: /opt/solr

    - file: path=~/IRP2 state=directory mode=0755
      become: no
      tags: code

    - name: Deploy application code
      copy: src=../../{{ item }} dest=~/IRP2/ mode=0755
      with_items:
        - archives
        - static
        - templates
        - dashboard.py
        - flask_extended.py
        - irp2_schema.sql
        - requirements.txt
      become: no
      tags: code

    - name: Deploy instance (no overwrite)
      copy: src=../../{{ item }} dest=~/IRP2/ mode=0755 force=no
      with_items:
        - instance
      become: no
      tags: code

    - name: Install Python packages
      pip: requirements=~/IRP2/requirements.txt virtualenv=~/irp2venv virtualenv_python=python3.4
      become: no

    - name: Stop existing application
      command: killall python
      become: no
      ignore_errors: yes

  handlers:
    - name: restart Nginx
      service: name=ntpd state=restarted
