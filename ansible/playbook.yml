---
- hosts: irp2
  become: yes

  vars:
    project_path: ~/IRP2
    virtualenv_path: ~/irp2venv

  roles:
    - ansible-java8-oracle

  tasks:
    - name: Add source repository
      apt_repository: repo="deb-src http://us.archive.ubuntu.com/ubuntu/ xenial main restricted" state=present
    - name: Install packages
      apt: pkg={{ item }} state=latest
      with_items:
        - python3
        - python3-dev
        - python-dev
        - python-virtualenv
        - python-pip
        - libz-dev
        - git
        - nginx

    - name: Install Python3 LXML dependencies
      apt: pkg=python3-lxml state=build-dep

    - name: Configure Nginx Proxy
      template: src=nginx-irp2.conf.j2 dest=/etc/nginx/conf.d/irp2.conf
    - service: name=nginx state=restarted enabled=yes

    - name: Check if Solr already configured (expensive steps)
      uri: url="http://localhost:8983/solr/location/admin/luke?show=index&wt=json" return_content=yes
      ignore_errors: yes
      register: solr_response

    - include: solr.yml
      when: solr_response.status == -1 
      #(solr_response.content|from_json)['index']['numDocs'] is defined

    - name: Creating project folder
      file: path={{ project_path }} state=directory mode=0755
      become: no
      tags: code
      when: vagrant is not defined

    - name: Deploy application code
      copy: src=../../{{ item }} dest={{ project_path }} mode=0755
      with_items:
        - archives
        - static
        - templates
        - dashboard.py
        - flask_extended.py
        - requirements.txt
      become: no
      when: vagrant is not defined
      tags: code

    - name: Deploy instance (no overwrite)
      copy: src=../../instance dest={{ project_path }} mode=0755 force=no
      become: no
      when: vagrant is not defined
      tags: code

    - name: Install Python packages
      pip: requirements={{ project_path }}/requirements.txt virtualenv={{ virtualenv_path }} virtualenv_python=python3
      become: no

    - name: Create the virtualenv postactivate script to set environment variables
      become: no
      lineinfile: dest={{ virtualenv_path }}/bin/activate insertafter=EOF line="export FLASK_APP={{ project_path }}/dashboard.py"

    - template: src=venv_exec.j2 dest={{ virtualenv_path }}/bin/exec mode=755
      become: no

    - name: Initialize DB
      become: no
      command: "{{ virtualenv_path }}/bin/exec flask init_db"

    # - name: Ensure that the application file permissions are set properly
    #   file: path={{ virtualenv_path }}
    #         recurse=yes
    #         owner={{ gunicorn_user }}
    #         group={{ gunicorn_group }}
    #         state=directory
    #   notify: restart application
    #   tags: deploy
    #
    - include: setup_nginx.yml
      tags: nginx

  # handlers:
  #   - name: restart Nginx
  #     service: name=nginx state=restarted
